@model SchoolManagement.Models.Enrollement

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(function () {
        $("#Student_FirstName").autocomplete(
            {
                source: function (request, response) {
                    $.ajax(
                        {
                            url: "/Enrollements/GetStudents",
                            dataType: "json",
                            type: "POST",
                            data:
                            {
                                term: request.term
                            },
                            success: function (data)
                            {
                                console.log(data);
                                response($.map(data, function (item)
                                {
                                    return { label: item.Name, value: item.Name, id: item.ID };
                                }))
                            }
                        });
                },
                minLength: 2,
                select: function (event, querry)
                {
                    console.log(querry);
                    $("#StudentID").val(querry.item.id);
                }
            });
    });
</script>

<h2>Create</h2>

@using (Ajax.BeginForm("AddStudent","Enrollements", new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin ="Added",
    OnFailure = "Failed"
}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enrollement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.StudentID)
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
